package cn.syrjia.hospital.controller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.syrjia.config.configCode;
import cn.syrjia.hospital.entity.Department;
import cn.syrjia.hospital.entity.Doctor;
import cn.syrjia.hospital.entity.IllnessOrDiscomfortClass;
import cn.syrjia.hospital.service.DoctorService;
import cn.syrjia.util.Util;

@Controller
@RequestMapping("/doctor")
public class DoctorController {

	@Resource(name = "doctorService")
	DoctorService doctorService;

	/**
	 * 分页、条件查询医生
	 * 
	 * @param doc
	 * @param page
	 * @param row
	 * @return
	 */
	@RequestMapping("/queryDoctorList")
	@ResponseBody
	public Map<String, Object> queryDoctorList(HttpServletRequest request,
			Doctor doctor, Integer page, Integer row, String searchSort,
			String illClassId, String area, String memberId,String city) {
		return doctorService.queryDoctorList(request, doctor, page, row,
				memberId, searchSort, illClassId, area,city);
	}

	/**
	 * 查询医生职称列表
	 * 
	 * @return
	 */
	@RequestMapping("/queryPositions")
	@ResponseBody
	public Map<String, Object> queryPositions() {
		List<Map<String, Object>> positions = doctorService.queryPositions();
		return Util.resultMap(configCode.code_1001, positions);
	}

	/**
	 * 查询医生科室列表
	 * 
	 * @return
	 */
	@RequestMapping("/queryDeparts")
	@ResponseBody
	public Map<String, Object> queryDeparts() {
		List<Map<String, Object>> departs = doctorService.queryDeparts();
		return Util.resultMap(configCode.code_1001, departs);
	}

	/**
	 * 查询医生详情
	 * 
	 * @return
	 */
	@RequestMapping("/queryDoctorById")
	@ResponseBody
	public Map<String, Object> queryDoctorById(HttpServletRequest request,
			String doctorId, String memberId) {
		return doctorService.queryDocotrById(request, doctorId, memberId);
	}
	
	/**
	 * 查询医生详情
	 * 
	 * @return
	 */
	@RequestMapping("/queryDoctorByCard")
	@ResponseBody
	public Map<String, Object> queryDoctorByCard(HttpServletRequest request,String doctorId) {
		return doctorService.queryDoctorByCard(doctorId);
	}
	
	/**
	 * 查询医生评价统计信息
	 * @param request
	 * @param doctorId
	 * @return
	 */
	@RequestMapping("/queryDoctorEvaCensus")
	@ResponseBody
	public Map<String, Object> queryDoctorEvaCensus(HttpServletRequest request,
			String doctorId,String memeberId) {
		return doctorService.queryDoctorEvaCensus(request,doctorId,memeberId);
	}
	
	/**
	 * 查询医生评价列表（详情、列表共用）
	 * @param doctorId
	 * @param row
	 * @param page
	 * @param _sign
	 * @return
	 */
	@RequestMapping("/queryDoctorEvaList")
	@ResponseBody
	public Map<String, Object> queryDoctorEvaList(HttpServletRequest request,String doctorId,
			Integer row, Integer page,String _sign,String memberId) {
		return doctorService.queryDoctorEvaList(request,doctorId, row, page, _sign,memberId);
	}
	
	/**
	 * 根据医生ID获取医生文章列表
	 * @param doctorId
	 * @param row
	 * @param page
	 * @return
	 */
	@RequestMapping("/queryDoctorArticleList")
	@ResponseBody
	public Map<String, Object> queryDoctorArticleList(HttpServletRequest request,String doctorId,
			Integer row, Integer page){
		return doctorService.queryDoctorArticleList(request,doctorId, row, page);
	}

	/**
	 * 分页查询我的医生
	 * 
	 * @return
	 */
	@RequestMapping("/queryMyDoctors")
	@ResponseBody
	public Map<String, Object> queryMyDoctors(HttpServletRequest request,
			String memberId, Integer page, Integer row) {
		return doctorService.queryMyDoctorList(request, memberId, page, row);
	}

	/**
	 * 根据搜索关键字搜索医生匹配列表
	 * 
	 * @param searchkey
	 * @return
	 */
	@RequestMapping("/queryDoctorByKey")
	@ResponseBody
	public Map<String, Object> queryDoctorByKey(String searchKey) {
		List<Map<String, Object>> list = doctorService
				.queryDoctorByKey(searchKey);
		return Util.resultMap(configCode.code_1001, list);
	}

	/**
	 * 获取坐诊信息列表
	 * @param request
	 * @param doctorId
	 * @param zzDate
	 * @return
	 */
	@RequestMapping("/queryDoctorZzList")
	@ResponseBody
	public Map<String, Object> queryDoctorZzList(HttpServletRequest request,String doctorId,String zzDate){
		return doctorService.queryDoctorZzList(doctorId, zzDate);
	}
	
	/**
	 * 获取坐诊状态
	 * @param request
	 * @param doctorId
	 * @param zzDate
	 * @return
	 */
	@RequestMapping("/queryZzDataCountByDocId")
	@ResponseBody
	public Map<String, Object> queryZzDataCountByDocId(HttpServletRequest request,String doctorId){
		return doctorService.queryZzDataCountByDocId(doctorId);
	}
	
	/**
	 * 根据医生ID获取从今天起7天内状态
	 * @param request
	 * @param doctorId
	 * @return
	 */
	@RequestMapping("/querySevenZzStatus")
	@ResponseBody
	public Map<String, Object> querySevenZzStatus(HttpServletRequest request,String doctorId){
		return doctorService.querySevenZzStatus(doctorId);
	}
	
	/**
	 * 1、查询首页不适及分类列表（7个） 
	 * 2、搜索页面常用搜索 9个
	 * 
	 * @return
	 */
	@RequestMapping("/queryIllClassByNum")
	@ResponseBody
	public Map<String, Object> queryIllClassByNum(Integer num) {
		// 不适及疾病分类
		List<Map<String,Object>> indexIllClsslist = doctorService
				.queryIllClass(num);
		return Util.resultMap(configCode.code_1001, indexIllClsslist);
	}

	/**
	 * 全部不适
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/queryAllIllClass")
	@ResponseBody
	public Map<String,Object> queryAllIllClass(Department department) {
		List<Department> allIlllist = doctorService.queryDepartments();
		return Util.resultMap(configCode.code_1001, allIlllist);
	}
	
	/**
	 * 根据病症ID查询病症信息详情
	 * @param illClass
	 * @return
	 */
	@RequestMapping("/getIllClassById")
	@ResponseBody
	public Map<String,Object> getIllClassById(
			IllnessOrDiscomfortClass illClass) {
		return doctorService.queryIllClassById(illClass.getIllClassId());
	}
	
	/**
	 * 查询我的病历本列表
	 * @param illClass
	 * @return
	 */
	@RequestMapping("/queryMedicalRecords")
	@ResponseBody
	public Map<String,Object> queryMedicalRecords(HttpServletRequest request,Integer page,Integer row,String memberId,Integer orderType,String patientId) {
		return doctorService.queryMedicalRecords(request, orderType, patientId, memberId, page, row);
	}
	
	/**
	 * 查询我的病历本列表头部搜索条件
	 * @param illClass
	 * @return
	 */
	@RequestMapping("/queryMedicalRecordsCons")
	@ResponseBody
	public Map<String,Object> queryMedicalRecords(HttpServletRequest request,String memberId) {
		return doctorService.queryMedicalRecordsCons(request, memberId);
	}
	
	/**
	 * 查看医生服务状态
	 * @param doctorId
	 * @param orderType
	 * @return
	 */
	@RequestMapping("/checkDoctorIsAccpetAsk")
	@ResponseBody
	public Map<String,Object> checkDoctorIsAccpetAsk(HttpServletRequest request,String memberId,String doctorId,Integer orderType){
		return doctorService.checkDoctorIsAccpetAsk(request, memberId, doctorId, orderType);
	}
	
}
